{"remainingRequest":"D:\\UWE\\CV\\imtuan\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\UWE\\CV\\imtuan\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\UWE\\CV\\imtuan\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\UWE\\CV\\imtuan\\src\\views\\SkillPage.vue?vue&type=template&id=e580d094&","dependencies":[{"path":"D:\\UWE\\CV\\imtuan\\src\\views\\SkillPage.vue","mtime":1621080805356},{"path":"D:\\UWE\\CV\\imtuan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UWE\\CV\\imtuan\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\UWE\\CV\\imtuan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UWE\\CV\\imtuan\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}